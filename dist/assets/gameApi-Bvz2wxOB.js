const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Zxf-w_JS.js","assets/react-core-CwM-CeLv.js","assets/vendor-CQn7sZ7L.js","assets/radix-ui-SX2QAG6c.js","assets/lucide-icons-wLPRtdhM.js","assets/supabase-r6ABpEO8.js","assets/index-BVHCjfv2.css"])))=>i.map(i=>d[i]);
import{_ as T}from"./supabase-r6ABpEO8.js";import{s as p,G as I}from"./index-Zxf-w_JS.js";async function U(){const{data:o,error:n}=await p.from("game_providers").select("*").eq("status","active").order("type",{ascending:!0}).order("name",{ascending:!0});if(n)throw console.error("제공사 조회 오류:",n),n;console.log(`🎮 제공사 조회 결과: ${o?.length||0}개`);const a=o?.filter(r=>r.type==="slot").length||0,e=o?.filter(r=>r.type==="casino").length||0;if(console.log(`  📊 슬롯: ${a}개, 카지노: ${e}개`),a<30||e<10){console.log("⚠️ 제공사 데이터가 부족합니다. 자동 초기화를 시도합니다..."),await O();const{data:r,error:d}=await p.from("game_providers").select("*").eq("status","active").order("type",{ascending:!0}).order("name",{ascending:!0});if(!d&&r){const i=r.filter(l=>l.type==="slot").length,c=r.filter(l=>l.type==="casino").length;return console.log(`✅ 재조회 결과 - 슬롯: ${i}개, 카지노: ${c}개`),r}}return o||[]}async function z(o,n){let a,e;typeof o=="string"?(a=o,e=n||{}):e=o||{},console.log("🔍 getGames 호출:",{partnerId:a,filters:e});let r;a?(r=p.from("games").select(`
        id,
        provider_id,
        name,
        type,
        status,
        image_url,
        demo_available,
        is_featured,
        priority,
        rtp,
        play_count,
        created_at,
        updated_at,
        game_providers!inner(
          id,
          name,
          type
        ),
        game_status_logs!left(
          status,
          priority,
          is_featured
        )
      `),r=r.or(`partner_id.eq.${a},partner_id.is.null`,{foreignTable:"game_status_logs"})):r=p.from("games").select(`
        id,
        provider_id,
        name,
        type,
        status,
        image_url,
        demo_available,
        is_featured,
        priority,
        rtp,
        play_count,
        created_at,
        updated_at,
        game_providers!inner(
          id,
          name,
          type
        )
      `),e?.type&&(r=r.eq("type",e.type),console.log("🔍 타입 필터 적용:",e.type)),e?.provider_id&&(r=r.eq("provider_id",e.provider_id),console.log("🔍 제공사 필터 적용:",e.provider_id)),e?.search&&(r=r.ilike("name",`%${e.search}%`),console.log("🔍 검색 필터 적용:",e.search)),e?.status&&(r=r.eq("status",e.status),console.log("🔍 상태 필터 적용:",e.status)),e?.type==="casino"?r=r.order("priority",{ascending:!1}).order("provider_id"):r=r.order("priority",{ascending:!1}).order("name");const{data:d,error:i}=await r;if(i)throw console.error("게임 조회 오류:",i),i;console.log(`🔍 DB에서 조회된 ${e?.type||"전체"} 게임:`,{총개수:d?.length||0,필터:{type:e?.type,provider_id:e?.provider_id,status:e?.status,search:e?.search},샘플:d?.slice(0,3).map(t=>({id:t.id,name:t.name,provider_id:t.provider_id,provider_name:t.game_providers?.name}))});const l=(d||[]).map(t=>{const m=Array.isArray(t.game_status_logs)?t.game_status_logs[0]:t.game_status_logs;return{id:t.id,provider_id:t.provider_id,name:t.name,type:t.type,status:m?.status||t.status,image_url:t.image_url,demo_available:t.demo_available,is_featured:m?.is_featured!==void 0?m.is_featured:t.is_featured||!1,priority:m?.priority!==void 0?m.priority:t.priority||0,rtp:t.rtp,play_count:t.play_count||0,created_at:t.created_at,updated_at:t.updated_at,provider_name:t.game_providers?.name||"알 수 없음"}}).sort((t,m)=>m.priority!==t.priority?m.priority-t.priority:m.is_featured!==t.is_featured?m.is_featured?1:-1:e?.type==="casino"?t.provider_id-m.provider_id:t.name.localeCompare(m.name));return console.log(`✅ 최종 ${e?.type||"전체"} 게임:`,{개수:l.length,제공사별_분포:l.reduce((t,m)=>(t[m.provider_name]=(t[m.provider_name]||0)+1,t),{}),상위_5개_우선순위:l.slice(0,5).map(t=>({name:t.name,priority:t.priority}))}),l}async function L(o,n){const{error:a}=await p.from("games").update({status:n,updated_at:new Date().toISOString()}).eq("id",o);if(a)throw console.error("게임 상태 업데이트 오류:",a),a}async function x(o,n){console.log(`🚀 Provider ${o} 동기화 시작`);const a=Date.now();let e=[];if(n&&n.length>0)e=n,console.log(`📥 제공된 게임 데이터 사용 - 총 ${e.length}개 게임`);else{console.log(`📡 Provider ${o} API 호출 시작`);const{investApi:_}=await T(async()=>{const{investApi:s}=await import("./index-Zxf-w_JS.js").then(u=>u._);return{investApi:s}},__vite__mapDeps([0,1,2,3,4,5,6])),{data:y,error:v}=await p.from("partners").select("opcode, secret_key").eq("level",1).order("created_at",{ascending:!0}).limit(1).maybeSingle();if(v||!y)throw console.error("❌ 시스템 관리자 정보 조회 실패:",v),new Error("시스템 관리자 정보를 찾을 수 없습니다.");try{const s=await _.getGameList(y.opcode,o,y.secret_key);if(s.error)if(console.error(`❌ Provider ${o} API 호출 실패:`,s.error),s.error.includes("게임 목록이 없습니다")||s.error.includes("지원하지 않는")||s.error.includes("잘못된 signature")||s.error.includes("provider not found")||s.status===404||s.status===400)console.log(`⚠️ Provider ${o}는 게임 리스트가 없거나 지원하지 않는 제공사입니다.`),e=[];else throw new Error(s.error);else if(s.data?.RESULT===!0&&Array.isArray(s.data?.DATA))e=s.data.DATA,console.log(`✅ Provider ${o} API 응답: ${e.length}개 게임 (이미 image_url 정규화됨)`);else if(s.data?.RESULT===!1){const u=s.data?.message||"알 수 없는 오류";if(console.log(`⚠️ Provider ${o} API 응답: 게임 리스트 없음 - ${u}`),u.includes("게임이 없습니다")||u.includes("no games")||u.includes("empty")||u.includes("없음"))e=[];else throw new Error(`API 오류: ${u}`)}else console.log(`⚠️ Provider ${o} 예상치 못한 응답 형식:`,s.data),e=[]}catch(s){console.error(`❌ Provider ${o} API 호출 중 오류:`,s),e=[]}}console.log(`📊 동기화할 게임 수: ${e.length}개`);const{data:r,error:d}=await p.from("game_providers").select("type").eq("id",o).maybeSingle();if(d||!r)throw console.error("제공사 조회 오류:",d),new Error(`제공사(ID: ${o}) 정보를 찾을 수 없습니다.`);const i=r.type,{data:c,error:l}=await p.from("games").select("id, priority").eq("provider_id",o);if(l)throw console.error("기존 게임 조회 오류:",l),l;const t=new Set(c?.map(_=>_.id)||[]),m=c&&c.length>0?Math.max(...c.map(_=>_.priority||0)):0;console.log(`📊 기존 게임 ${t.size}개 확인됨, 최대 우선순위: ${m}`);const h=[],b=new Date().toISOString(),w=100;for(let _=0;_<e.length;_+=w){const v=e.slice(_,_+w).map((s,u)=>{const D=parseInt(s.id||s.game_id||s.gameId||s.ID);if(!D||isNaN(D))return null;let A="";s.game_title&&typeof s.game_title=="string"&&s.game_title.trim()?A=s.game_title.trim():s.name&&typeof s.name=="string"&&s.name.trim()?A=s.name.trim():s.game_name&&typeof s.game_name=="string"&&s.game_name.trim()?A=s.game_name.trim():s.gameName&&typeof s.gameName=="string"&&s.gameName.trim()?A=s.gameName.trim():s.title&&typeof s.title=="string"&&s.title.trim()?A=s.title.trim():A=`Game ${D}`;const $=s.image_url||null,G=!!(s.demo_available||s.demoAvailable||s.demo);return{id:D,provider_id:o,name:A,type:i,status:"visible",image_url:$?String($):null,demo_available:G,created_at:b,updated_at:b,isExisting:t.has(D)}}).filter(s=>s!==null);h.push(...v)}console.log(`✅ 처리된 게임 수: ${h.length}개`);const g=h.filter(_=>!_.isExisting),E=h.filter(_=>_.isExisting);console.log(`📈 신규 게임: ${g.length}개, 업데이트 대상: ${E.length}개`);let P=0,f=0;if(g.length>0){const _=g.map(({isExisting:v,...s},u)=>({...s,priority:m+g.length-u}));console.log(`🆕 신규 게임 우선순위 범위: ${m+1} ~ ${m+g.length}`);const y=500;for(let v=0;v<_.length;v+=y){const s=_.slice(v,v+y),{error:u}=await p.from("games").insert(s);if(u)throw console.error(`게임 추가 오류 (청크 ${Math.floor(v/y)+1}):`,u),u}P=g.length,console.log(`✅ ${P}개 신규 게임 추가 완료 (상위 노출 설정)`)}if(E.length>0){for(let y=0;y<E.length;y+=100){const s=E.slice(y,y+100).map(async D=>{const{isExisting:A,...$}=D,{error:G}=await p.from("games").update({name:$.name,image_url:$.image_url,demo_available:$.demo_available,updated_at:$.updated_at}).eq("id",$.id).eq("provider_id",o);return G?(console.error(`게임 ${$.id} 업데이트 오류:`,G),!1):!0}),u=await Promise.all(s);f+=u.filter(Boolean).length}console.log(`✅ ${f}개 기존 게임 업데이트 완료`)}const k=((Date.now()-a)/1e3).toFixed(1),q={newGames:P,updatedGames:f,totalGames:h.length};return console.log(`🎯 Provider ${o} 동기화 완료 (${k}초):`,q),q}async function O(){console.log("🔧 게임 제공사 데이터 초기화 시작...");const n=[{id:1,name:"마이크로게이밍",type:"slot"},{id:17,name:"플레이앤고",type:"slot"},{id:20,name:"CQ9 게이밍",type:"slot"},{id:21,name:"제네시스 게이밍",type:"slot"},{id:22,name:"하바네로",type:"slot"},{id:23,name:"게임아트",type:"slot"},{id:27,name:"플레이텍",type:"slot"},{id:38,name:"블루프린트",type:"slot"},{id:39,name:"부운고",type:"slot"},{id:40,name:"드라군소프트",type:"slot"},{id:41,name:"엘크 스튜디오",type:"slot"},{id:47,name:"드림테크",type:"slot"},{id:51,name:"칼람바 게임즈",type:"slot"},{id:52,name:"모빌롯",type:"slot"},{id:53,name:"노리밋 시티",type:"slot"},{id:55,name:"OMI 게이밍",type:"slot"},{id:56,name:"원터치",type:"slot"},{id:59,name:"플레이슨",type:"slot"},{id:60,name:"푸쉬 게이밍",type:"slot"},{id:61,name:"퀵스핀",type:"slot"},{id:62,name:"RTG 슬롯",type:"slot"},{id:63,name:"리볼버 게이밍",type:"slot"},{id:65,name:"슬롯밀",type:"slot"},{id:66,name:"스피어헤드",type:"slot"},{id:70,name:"썬더킥",type:"slot"},{id:72,name:"우후 게임즈",type:"slot"},{id:74,name:"릴렉스 게이밍",type:"slot"},{id:75,name:"넷엔트",type:"slot"},{id:76,name:"레드타이거",type:"slot"},{id:87,name:"PG소프트",type:"slot"},{id:88,name:"플레이스타",type:"slot"},{id:90,name:"빅타임게이밍",type:"slot"},{id:300,name:"프라그마틱 플레이",type:"slot"},{id:410,name:"에볼루션 게이밍",type:"casino"},{id:77,name:"마이크로 게이밍",type:"casino"},{id:2,name:"Vivo 게이밍",type:"casino"},{id:30,name:"아시아 게이밍",type:"casino"},{id:78,name:"프라그마틱플레이",type:"casino"},{id:86,name:"섹시게이밍",type:"casino"},{id:11,name:"비비아이엔",type:"casino"},{id:28,name:"드림게임",type:"casino"},{id:89,name:"오리엔탈게임",type:"casino"},{id:91,name:"보타",type:"casino"},{id:44,name:"이주기",type:"casino"},{id:85,name:"플레이텍 라이브",type:"casino"},{id:0,name:"제네럴 카지노",type:"casino"}].map(r=>({id:r.id,name:r.name,type:r.type,status:"active",created_at:new Date().toISOString(),updated_at:new Date().toISOString()})),a=20;let e=0;for(let r=0;r<n.length;r+=a){const d=n.slice(r,r+a),{error:i}=await p.from("game_providers").upsert(d,{onConflict:"id",ignoreDuplicates:!1});i?console.error(`제공사 배치 ${Math.floor(r/a)+1} 삽입 오류:`,i):e+=d.length}console.log(`✅ 제공사 데이터 초기화 완료: ${e}개 처리`)}async function R(){console.log("🎰 카지노 로비 게임 초기화 시작");const{data:o,error:n}=await p.from("game_providers").select("id, name").eq("type","casino");if(n){console.error("카지노 제공사 조회 오류:",n);return}if(!o||o.length===0){console.log("카지노 제공사가 없습니다.");return}const a=[{id:41e4,provider_id:410,name:"에볼루션 게이밍 로비"},{id:77060,provider_id:77,name:"마이크로 게이밍 로비"},{id:2029,provider_id:2,name:"Vivo 게이밍 로비"},{id:3e4,provider_id:30,name:"아시아 게이밍 로비"},{id:78001,provider_id:78,name:"프라그마틱플레이 로비"},{id:86001,provider_id:86,name:"섹시게이밍 로비"},{id:11e3,provider_id:11,name:"비비아이엔 로비"},{id:28e3,provider_id:28,name:"드림게임 로비"},{id:89e3,provider_id:89,name:"오리엔탈게임 로비"},{id:91e3,provider_id:91,name:"보타 로비"},{id:44006,provider_id:44,name:"이주기 로비"},{id:85036,provider_id:85,name:"플레이텍 라이브 로비"},{id:0,provider_id:0,name:"제네럴 카지노 로비"}],{data:e}=await p.from("games").select("id").eq("type","casino"),r=new Set(e?.map(i=>i.id)||[]),d=a.filter(i=>!r.has(i.id)&&o.some(c=>c.id===i.provider_id));if(d.length>0){const i=d.map(l=>({id:l.id,provider_id:l.provider_id,name:l.name,type:"casino",status:"visible",demo_available:!1,created_at:new Date().toISOString(),updated_at:new Date().toISOString()})),{error:c}=await p.from("games").insert(i);c?console.error("카지노 로비 게임 추가 오류:",c):console.log(`✅ ${d.length}개 카지노 로비 게임 추가 완료`)}else console.log("✅ 카지노 로비 게임이 이미 모두 존재합니다.")}async function N(o,n,a,e,r,d,i,c){const{data:l,error:t}=await p.rpc("save_game_sync_result",{p_provider_id:o,p_opcode:n,p_sync_type:a,p_games_added:e,p_games_updated:r,p_games_removed:d,p_error_message:i,p_sync_duration:c});if(t)throw console.error("동기화 결과 저장 오류:",t),t;return l}async function B(o,n,a,e,r=50,d=0){const{data:i,error:c}=await p.rpc("get_user_visible_games",{p_user_id:o,p_game_type:n,p_provider_id:a,p_search_term:e,p_limit:r,p_offset:d});if(c)throw console.error("사용자 게임 목록 조회 오류:",c),c;return i||[]}async function M(o,n,a,e,r){const{data:d,error:i}=await p.rpc("update_game_status_for_partner",{p_partner_id:o,p_game_id:n,p_status:a,p_priority:e,p_is_featured:r});if(i)throw console.error("게임 상태 업데이트 오류:",i),i;return d}async function C(o,n){try{console.log("🎮 게임 실행 요청 시작:",{userId:o,gameId:n,userIdType:typeof o}),console.log("🔍 사용자 정보 조회 시작:",{userId:o,userIdType:typeof o});const{data:a,error:e}=await p.from("users").select("username, balance").eq("id",o).single();if(console.log("🔍 사용자 조회 결과:",{userData:a,userError:e}),e)throw console.error("❌ 사용자 조회 오류:",{error:e,message:e.message,details:e.details,hint:e.hint,code:e.code}),new Error(`사용자 정보 조회 실패: ${e.message}`);if(!a)throw console.error("❌ 사용자 데이터 없음:",{userId:o}),new Error("사용자 정보를 찾을 수 없습니다.");console.log("🔍 OPCODE 정보 조회 시작:",{userId:o});const{data:r,error:d}=await p.rpc("get_user_opcode_info",{user_id:o});console.log("🔍 OPCODE 조회 결과:",{opcodeData:r,opcodeError:d});let i,c,l;if(d||!r||!r.success){console.error("❌ OPCODE 조회 실패:",r?.error||d?.message),console.log("🔄 시스템 관리자 OPCODE로 fallback");const{data:S,error:k}=await p.from("partners").select("opcode, secret_key, api_token").eq("level",1).order("created_at",{ascending:!0}).limit(1).maybeSingle();if(k||!S)throw new Error("시스템 OPCODE 정보를 찾을 수 없습니다. 관리자에게 문의하세요.");if(!S.api_token)throw new Error("시스템 관리자의 API 토큰이 설정되지 않았습니다. partners 테이블에서 api_token을 설정하세요.");i=S.opcode,c=S.secret_key,l=S.api_token}else i=r.opcode,c=r.secret_key,l=r.api_token;const{username:t,balance:m}=a;if(!i||!c||!l)throw new Error("게임 실행에 필요한 API 정보가 부족합니다. 관리자에게 문의하세요.");console.log("📊 API 호출 정보:",{username:t,balance:m,opcode:i,secret_key:c?"***"+c.slice(-4):"null",token:l?"***"+l.slice(-4):"null"});const{data:h,error:b}=await p.from("games").select("id, name, external_game_id").eq("id",n).maybeSingle();if(b||!h)throw new Error("게임 정보를 찾을 수 없습니다.");let w=h.external_game_id;(!w||w===null||w==="")&&(w=h.id),console.log("🎮 investApi.launchGame 호출:",{opcode:i,username:t,token:l?"***"+l.slice(-4):"null",gameId:w,secret_key:c?"***"+c.slice(-4):"null"});const g=await I.launchGame(i,t,l,w,c);if(console.log("🎮 investApi.launchGame 결과:",g),!g.success)throw new Error(g.error||"게임 실행에 실패했습니다.");const E=g.data?.game_url||g.data?.url||g.data?.launch_url||"";if(!E)throw console.error("❌ 게임 URL을 찾을 수 없음:",g),new Error(g.error||"게임 실행 URL을 받지 못했습니다.");console.log("✅ 게임 URL 획득");const{data:P,error:f}=await p.rpc("save_game_launch_session",{p_user_id:o,p_game_id:n,p_opcode:i,p_launch_url:E,p_session_token:g.data?.token||null,p_balance_before:m||0});if(f){if(console.error("❌ 게임 세션 저장 오류:",f),console.error("❌ 오류 상세:",{code:f.code,message:f.message,details:f.details,hint:f.hint}),f.message&&f.message.includes("30초"))return{success:!1,error:"잠시 후에 다시 시도하세요. (게임 실행 대기 시간)",sessionId:null}}else P==null?(console.error("⚠️ 게임 세션 저장 실패: sessionId가 null입니다!"),console.error("⚠️ 함수가 에러를 반환하지 않았지만 세션 ID가 null입니다."),console.error("⚠️ Supabase 로그를 확인하세요: https://nzuzzmaiuybzyndptaba.supabase.co/project/_/logs/postgres-logs")):console.log("✅ 게임 세션 저장 완료:",P);return{success:!0,launchUrl:E,sessionId:P||null}}catch(a){console.error("❌ 게임 실행 오류:",a);const e=a instanceof Error?a.message:"게임 실행 중 오류가 발생했습니다.";return console.error("📝 반환할 오류 메시지:",e),{success:!1,error:e,sessionId:null}}finally{console.log("🔚 게임 실행 프로세스 종료")}}async function V(o){console.log("🔄 모든 제공사 게임 동기화 시작");const n=[];try{const{data:a,error:e}=await p.from("game_providers").select("id, name, type").eq("type","slot").eq("status","active");if(e)throw e;const r=o||"system_admin";for(const l of a||[])try{console.log(`🎮 ${l.name} (ID: ${l.id}) 동기화 시작`);const t=await x(l.id);n.push({providerId:l.id,providerName:l.name,gamesAdded:t.newGames||0,gamesUpdated:t.updatedGames||0}),await new Promise(m=>setTimeout(m,1e3))}catch(t){console.error(`❌ ${l.name} 동기화 실패:`,t),n.push({providerId:l.id,providerName:l.name,gamesAdded:0,gamesUpdated:0,error:t instanceof Error?t.message:"알 수 없는 오류"})}const d=n.reduce((l,t)=>l+t.gamesAdded,0),i=n.reduce((l,t)=>l+t.gamesUpdated,0),c=n.filter(l=>l.error).length;return console.log("✅ 전체 동기화 완료"),console.log(`📊 결과: 신규 ${d}개, 업데이트 ${i}개, 실패 ${c}개`),{success:c===0,results:n}}catch(a){return console.error("❌ 전체 동기화 실패:",a),{success:!1,results:n}}}async function j(o,n,a,e,r,d){try{const{data:i,error:c}=await p.rpc("save_game_session",{p_session_id:o,p_user_id:n,p_username:a,p_game_id:e,p_provider_id:r,p_launch_url:d||null});return c?(console.error("❌ 게임 세션 저장 실패:",c),null):(console.log("✅ 게임 세션 저장 완료:",i),i)}catch(i){return console.error("❌ 게임 세션 저장 오류:",i),null}}async function F(o,n,a){try{const{data:e,error:r}=await p.rpc("update_game_session_status",{p_session_id:o,p_status:n,p_ended_at:a||null});return r?(console.error("❌ 게임 세션 상태 업데이트 실패:",r),!1):(console.log("✅ 게임 세션 상태 업데이트 완료:",{sessionId:o,status:n}),e)}catch(e){return console.error("❌ 게임 세션 상태 업데이트 오류:",e),!1}}async function Q(o,n,a=0,e=!0,r){try{const{data:d,error:i}=await p.rpc("log_game_sync",{p_sync_type:o,p_provider_id:n||null,p_records_count:a,p_success:e,p_error_message:r||null});return i?(console.error("❌ 게임 동기화 로그 기록 실패:",i),null):d}catch(d){return console.error("❌ 게임 동기화 로그 기록 오류:",d),null}}const K={getProviders:U,getGames:z,updateGameStatus:L,syncGamesFromAPI:x,initializeGameProviders:O,initializeCasinoLobbyGames:R,saveSyncResult:N,getUserVisibleGames:B,updateGameStatusForPartner:M,generateGameLaunchUrl:C,launchGame:C,syncAllProviderGames:V,saveGameSession:j,updateGameSessionStatus:F,logGameSync:Q};export{K as g};
